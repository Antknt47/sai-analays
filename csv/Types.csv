関数名,概要,引数名,型,入力/出力,説明,戻り値
sai_bulk_object_create_fn,Bulk objects creation.,switch_id,sai_object_id_t,入力,SAI Switch object id,`SAI_STATUS_SUCCESS` on success when all objects are created or #SAI_STATUS_FAILURE when
,,object_count,uint32_t,入力,Number of objects to create,
,,attr_count,uint32_t *,入力,List of attr_count. Caller passes the number,
,,*attr_list,sai_attribute_t *,入力/出力,-,
,,mode,sai_bulk_op_error_mode_t,入力,Bulk operation error handling mode.,
,,object_id,sai_object_id_t *,出力,List of object ids returned,
,,object_statuses,sai_status_t *,出力,List of status for every object. Caller needs to allocate the buffer.,

sai_bulk_object_remove_fn,Bulk objects removal.,object_count,uint32_t,入力,Number of objects to create,`SAI_STATUS_SUCCESS` on success when all objects are removed or #SAI_STATUS_FAILURE when
,,object_id,sai_object_id_t *,入力,List of object ids,
,,mode,sai_bulk_op_error_mode_t,入力,Bulk operation error handling mode.,
,,object_statuses,sai_status_t *,出力,List of status for every object. Caller needs to allocate the buffer.,

sai_bulk_object_set_attribute_fn,Bulk objects set attributes.,object_count,uint32_t,入力,Number of objects to set on attribute,`SAI_STATUS_SUCCESS` when set attributes on all objects succeeded or
,,object_id,sai_object_id_t *,入力,List of object ids,
,,attr_list,sai_attribute_t *,入力,List of attributes for every object, one per object.,
,,mode,sai_bulk_op_error_mode_t,入力,Bulk operation error handling mode.,
,,object_statuses,sai_status_t *,出力,List of status for every object. Caller needs to allocate the buffer.,

sai_bulk_object_get_attribute_fn,Bulk objects get attributes.,object_count,uint32_t,入力,Number of objects to get on attribute,`SAI_STATUS_SUCCESS` when get attributes on all objects succeeded or
,,object_id,sai_object_id_t *,入力,List of object ids,
,,attr_count,uint32_t *,入力,List of attr_count. Caller passes the number,
,,*attr_list,sai_attribute_t *,入力/出力,-,
,,mode,sai_bulk_op_error_mode_t,入力,Bulk operation error handling mode.,
,,object_statuses,sai_status_t *,出力,List of status for every object. Caller needs to allocate the buffer.,

